{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","rows","backgroundColor","onChange","event","target","newText","toUpperCase","alertDispaly","toLowerCase","length","trim","split","protoTypes","PropTypes","string","about","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","alertDisplay","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.37032095.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              {/* <a className=\"nav-link\" href=\"/\">\r\n                  {props.about}\r\n                </a> */}\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.about}\r\n                </Link> */}\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.protoTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  about: 'About text here',\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log('Uppercase was clicked');\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.alertDispaly(\"Converted to uppercase!\",\"success\")\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log('Uppercase was clicked');\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.alertDispaly(\"Converted to lowercase!\",\"success\")\r\n  };\r\n  const handleClClick = () => {\r\n    let newText = '';\r\n    setText(newText);\r\n    props.alertDispaly(\" Text is cleared\",\"success\")\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log('On Change');\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\"  style= {{color: props.mode==='light'?'black':'white'}}>\r\n        <h5>{props.heading}</h5>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            value={text}\r\n            rows=\"8\"\r\n            style= {{backgroundColor: props.mode==='light'?'white':'#395e65', color: props.mode==='light'?'black':'white' }}\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          UpperCase Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          LowerCase text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClClick}>\r\n          Clear text\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\"  style= {{color: props.mode==='light'?'black':'white'}}>\r\n        <h6> Your Text Summary</h6>\r\n        <p>\r\n          {text.length>0? text.trim().split(\" \").length:0} words and {text.length} charecters\r\n        </p>\r\n        <p>{text.length>0? 0.008 * (text.split(' ').length):\"0\"} Minutes Reading time</p>\r\n        <h3> Preview</h3>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTextForm.protoTypes = {\r\n  heading: PropTypes.string,\r\n};\r\n\r\nTextForm.defaultProps = {\r\n  heading: 'type heading here',\r\n};\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n        \r\n        \r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n             <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport React, { useState } from 'react'\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const alertDispaly = (message,type) => {\n    setAlert({\n      msg : message,\n      type : type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000 );\n  }\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#043a45';\n      alertDispaly(\"Dark mode has been enable\",\"success\");\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      alertDispaly(\"Light mode has been enable\",\"success\");\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Texter\" about=\"about us\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n          {/* <Route exact path=\"/About\">\n            <About mode={mode} />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm alertDisplay = {alertDispaly} heading=\"Type your text here\" mode={mode} alert={alert} alertDispaly={alertDispaly}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n       </div>\n       {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}